@use "variables" as *;

//Media query
@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin flex ($direction: column, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin font ($font-size, $font-weight: 400) {
    font-size: $font-size;
    font-weight: $font-weight;
}

@mixin columns($width) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    > * {
        flex-basis: $width;
    }
}

@mixin img-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin absCenter {
    position:absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin before($width, $top, $left, $color) {
    position: relative;
    z-index: 1;

    &:before{
        content: '';
        display: block;
        position: absolute;
        top: $top;
        left: $left;
        width: $width;
        border: 1px solid $color;
        z-index: 2;

        @content;
    }
}

@mixin css3-prefix($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}